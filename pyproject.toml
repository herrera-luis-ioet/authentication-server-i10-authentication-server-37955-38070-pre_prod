[tool.poetry]
name = "authentication-management-component"
version = "0.1.0"
description = "Authentication Management Component for secure user authentication and management"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "auth_service"}]

[tool.poetry.dependencies]
python = "^3.9"
flask = "^2.3.3"
sqlalchemy = "^2.0.20"
psycopg2-binary = "^2.9.7"
pyjwt = "^2.8.0"
bcrypt = "^4.0.1"
flask-sqlalchemy = "^3.1.1"
flask-migrate = "^4.0.4"
flask-cors = "^4.0.0"
python-dotenv = "^1.0.0"
marshmallow = "^3.20.1"
email-validator = "^2.0.0"
sendgrid = "^6.10.0"
gunicorn = "^21.2.0"
prometheus-client = "^0.17.1"
flask-limiter = "^3.5.0"
pyotp = "^2.9.0"  # For multi-factor authentication

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^6.1.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pre-commit = "^3.3.3"
faker = "^19.3.1"  # For generating test data

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.5"
sphinx-rtd-theme = "^1.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=auth_service --cov-report=term-missing"