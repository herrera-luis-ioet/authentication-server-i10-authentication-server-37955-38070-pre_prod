{"is_source_file": true, "format": "Python", "description": "This Python module provides security-related utilities for the authentication service, including password validation, token generation, and JWT handling.", "external_files": ["jwt", "flask"], "external_methods": ["bcrypt.generate_password_hash", "bcrypt.check_password_hash", "jwt.encode", "jwt.decode"], "published": ["validate_password_strength", "hash_password", "check_password", "generate_secure_token", "generate_jwt_token", "decode_jwt_token", "is_token_expired", "sanitize_input"], "classes": [], "methods": [{"name": "Tuple[bool,str] validate_password_strength(password: str)", "description": "Validates the strength of a password based on configured requirements.", "scope": "", "scopeKind": ""}, {"name": "str hash_password(password: str)", "description": "Hashes a password using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "bool check_password(hashed_password: str, password: str)", "description": "Verifies a password against a hash.", "scope": "", "scopeKind": ""}, {"name": "str generate_secure_token(length: int = 32)", "description": "Generates a cryptographically secure random token.", "scope": "", "scopeKind": ""}, {"name": "str generate_jwt_token( user_id: int, token_type: str = \"access\", expires_delta: Optional[timedelta] = None, fresh: bool = False, additional_claims: Optional[Dict] = None )", "description": "Generates a JWT token for a user.", "scope": "", "scopeKind": ""}, {"name": "Union[Dict,None] decode_jwt_token(token: str)", "description": "Decodes and validates a JWT token.", "scope": "", "scopeKind": ""}, {"name": "bool is_token_expired(token: str)", "description": "Checks if a JWT token is expired.", "scope": "", "scopeKind": ""}, {"name": "str sanitize_input(input_str: str)", "description": "Sanitizes user input to prevent common security issues.", "scope": "", "scopeKind": ""}], "calls": ["current_app.config.get", "datetime.utcnow"], "search-terms": ["authentication", "security_utilities", "JWT_handling"], "state": 2, "file_id": 14, "knowledge_revision": 33, "git_revision": "", "ctags": [{"_type": "tag", "name": "check_password", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def check_password(hashed_password: str, password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(hashed_password: str, password: str)"}, {"_type": "tag", "name": "decode_jwt_token", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def decode_jwt_token(token: str) -> Union[Dict, None]:$/", "language": "Python", "typeref": "typename:Union[Dict,None]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "generate_jwt_token", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def generate_jwt_token($/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "( user_id: int, token_type: str = \"access\", expires_delta: Optional[timedelta] = None, fresh: bool = False, additional_claims: Optional[Dict] = None )"}, {"_type": "tag", "name": "generate_secure_token", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def generate_secure_token(length: int = 32) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(length: int = 32)"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "is_token_expired", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def is_token_expired(token: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "sanitize_input", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def sanitize_input(input_str: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(input_str: str)"}, {"_type": "tag", "name": "validate_password_strength", "path": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "pattern": "/^def validate_password_strength(password: str) -> Tuple[bool, str]:$/", "language": "Python", "typeref": "typename:Tuple[bool,str]", "kind": "function", "signature": "(password: str)"}], "filename": "/home/kavia/workspace/authentication-server-i10-authentication-server-37955-38070-pre_prod/app/utils/security.py", "hash": "87b4ad72dbc81fc80b50d27a3177aec4", "format-version": 4, "code-base-name": "default", "revision_history": [{"33": ""}]}